%%==============================================================================
%% Copyright 2020,2021 Artur Stefanowicz <artur.stefanowicz7@gmail.com>.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.
%%==============================================================================

%%==============================================================================
%% Thales 9000 Commands / Testing utilities
%%------------------------------------------------------------------------------
%% 2018-2021
%%==============================================================================
-module(commands_tests).

-include_lib("eunit/include/eunit.hrl").

-compile(export_all).

%% ---------------- Testy  -----------------------------------------------------------------
start()->
    application:start(hsmxs).

stop(_SetupData)->
    application:stop(hsmxs).

cmd_A0_test_() ->
    {setup,
     fun start/0,
     fun stop/1,
     fun(_SetupData)->
	     [
	      fun(_SetupData)->
		      CMD=commands:build_cmd_A0(kblk,dek,aes128),
		      ?debugFmt("cmd_A0_test_1_ ...",[]),
		      {ok,KEY,KCV}=commands:execute(CMD),
		      ?_assertEqual(1,1)
	      end,
	      fun(_SetupData)->
		      CMD=commands:build_cmd_A0(kblk,pvk_visa,des3),
		      ?debugFmt("cmd_A0_test_2_ ...",[]),
		      {ok,KEY,KCV}=commands:execute(CMD),
		      ?_assertEqual(1,1)
	      end,
	      fun(_SetupData)->
		      CMD=commands:build_cmd_A0(kblk,pvk_ibm,des3),
		      ?debugFmt("cmd_A0_test_3_ ...",[]),
		      {ok,KEY,KCV}=commands:execute(CMD),
		      ?_assertEqual(1,1)
	      end
	     ] end}.

cmd_M0_M2_test_() ->
    {setup,
     fun start/0,
     fun stop/1,
     fun(SetupData)->
	     [
	      fun(_SetupData)->
		      ?debugFmt("cmd_M0_M2_test_ ...",[]),
		      KEY="S1009623AN00N00016AA097E57249F447A3C3EFDE6D73846204C9ACC085B8533D3BB17D74011C302D78D27A07A55E33AE",
		      NULL_IV = <<"0000000000000000">>,
		      PLAIN = <<"text555555555555">>,
		      
		      CMD1 = commands:build_cmd_M0(kblk,ecb,{tek,KEY},NULL_IV,PLAIN),
		      {ok,ENCR} = commands:execute(CMD1),
		      
		      CMD2 = commands:build_cmd_M2(kblk,ecb,{tek,KEY},NULL_IV,ENCR),
		      {ok,PLAIN1}=commands:execute(CMD2),
		      
		      [
		       ?_assertEqual(PLAIN, PLAIN1)
		      ] 
	      end 
	     ] end}.
